function [W] = STFT(x,M)
arguments
    x {mustBeVector}
    M {mustBeInteger}
end
N = round(length(x)/M);
W = zeros(N, M);

SHIFT = @(x, i) buffer(Filter(1, [0 1], x'), N);
for ik = 0:M-1
    basis_vec = Complex(ik, M);
    for in = 1:M-1
        x_decimated = Decimate(M, x);
        curr_x = SHIFT(x_decimated, ik);
        curr_prod = Scalar(basis_vec(in), curr_x);
        W(:, ik+1) = Add(W(:, ik+1), curr_prod);
    end
end
% M x N_frames
x_windowed = reshape(x, M, []);

% Define discrete frequency domain
f = (0:M-1);

% Get fft basis, M_samples x M_frequencies
fft_basis = Complex(f, M);

% Compute DFT for each window
W = x_windowed.' * fft_basis;
end